/*
vpn-indexer

NABU VPN indexer API

API version: v0
Contact: support@blinklabs.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ApiTxSignupRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiTxSignupRequest{}

// ApiTxSignupRequest struct for ApiTxSignupRequest
type ApiTxSignupRequest struct {
	ClientAddress *string `json:"clientAddress,omitempty"`
	Duration      *int32  `json:"duration,omitempty"`
	Price         *int32  `json:"price,omitempty"`
	Region        *string `json:"region,omitempty"`
}

// NewApiTxSignupRequest instantiates a new ApiTxSignupRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiTxSignupRequest() *ApiTxSignupRequest {
	this := ApiTxSignupRequest{}
	return &this
}

// NewApiTxSignupRequestWithDefaults instantiates a new ApiTxSignupRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiTxSignupRequestWithDefaults() *ApiTxSignupRequest {
	this := ApiTxSignupRequest{}
	return &this
}

// GetClientAddress returns the ClientAddress field value if set, zero value otherwise.
func (o *ApiTxSignupRequest) GetClientAddress() string {
	if o == nil || IsNil(o.ClientAddress) {
		var ret string
		return ret
	}
	return *o.ClientAddress
}

// GetClientAddressOk returns a tuple with the ClientAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiTxSignupRequest) GetClientAddressOk() (*string, bool) {
	if o == nil || IsNil(o.ClientAddress) {
		return nil, false
	}
	return o.ClientAddress, true
}

// HasClientAddress returns a boolean if a field has been set.
func (o *ApiTxSignupRequest) HasClientAddress() bool {
	if o != nil && !IsNil(o.ClientAddress) {
		return true
	}

	return false
}

// SetClientAddress gets a reference to the given string and assigns it to the ClientAddress field.
func (o *ApiTxSignupRequest) SetClientAddress(v string) {
	o.ClientAddress = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *ApiTxSignupRequest) GetDuration() int32 {
	if o == nil || IsNil(o.Duration) {
		var ret int32
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiTxSignupRequest) GetDurationOk() (*int32, bool) {
	if o == nil || IsNil(o.Duration) {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *ApiTxSignupRequest) HasDuration() bool {
	if o != nil && !IsNil(o.Duration) {
		return true
	}

	return false
}

// SetDuration gets a reference to the given int32 and assigns it to the Duration field.
func (o *ApiTxSignupRequest) SetDuration(v int32) {
	o.Duration = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *ApiTxSignupRequest) GetPrice() int32 {
	if o == nil || IsNil(o.Price) {
		var ret int32
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiTxSignupRequest) GetPriceOk() (*int32, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *ApiTxSignupRequest) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given int32 and assigns it to the Price field.
func (o *ApiTxSignupRequest) SetPrice(v int32) {
	o.Price = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *ApiTxSignupRequest) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiTxSignupRequest) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *ApiTxSignupRequest) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *ApiTxSignupRequest) SetRegion(v string) {
	o.Region = &v
}

func (o ApiTxSignupRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiTxSignupRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClientAddress) {
		toSerialize["clientAddress"] = o.ClientAddress
	}
	if !IsNil(o.Duration) {
		toSerialize["duration"] = o.Duration
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	return toSerialize, nil
}

type NullableApiTxSignupRequest struct {
	value *ApiTxSignupRequest
	isSet bool
}

func (v NullableApiTxSignupRequest) Get() *ApiTxSignupRequest {
	return v.value
}

func (v *NullableApiTxSignupRequest) Set(val *ApiTxSignupRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApiTxSignupRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApiTxSignupRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiTxSignupRequest(
	val *ApiTxSignupRequest,
) *NullableApiTxSignupRequest {
	return &NullableApiTxSignupRequest{value: val, isSet: true}
}

func (v NullableApiTxSignupRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiTxSignupRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
