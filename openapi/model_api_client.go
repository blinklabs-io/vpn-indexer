/*
vpn-indexer

NABU VPN indexer API

API version: v0
Contact: support@blinklabs.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ApiClient type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiClient{}

// ApiClient struct for ApiClient
type ApiClient struct {
	Expiration *string `json:"expiration,omitempty"`
	Id         *string `json:"id,omitempty"`
	Region     *string `json:"region,omitempty"`
}

// NewApiClient instantiates a new ApiClient object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiClient() *ApiClient {
	this := ApiClient{}
	return &this
}

// NewApiClientWithDefaults instantiates a new ApiClient object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiClientWithDefaults() *ApiClient {
	this := ApiClient{}
	return &this
}

// GetExpiration returns the Expiration field value if set, zero value otherwise.
func (o *ApiClient) GetExpiration() string {
	if o == nil || IsNil(o.Expiration) {
		var ret string
		return ret
	}
	return *o.Expiration
}

// GetExpirationOk returns a tuple with the Expiration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiClient) GetExpirationOk() (*string, bool) {
	if o == nil || IsNil(o.Expiration) {
		return nil, false
	}
	return o.Expiration, true
}

// HasExpiration returns a boolean if a field has been set.
func (o *ApiClient) HasExpiration() bool {
	if o != nil && !IsNil(o.Expiration) {
		return true
	}

	return false
}

// SetExpiration gets a reference to the given string and assigns it to the Expiration field.
func (o *ApiClient) SetExpiration(v string) {
	o.Expiration = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ApiClient) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiClient) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ApiClient) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ApiClient) SetId(v string) {
	o.Id = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *ApiClient) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiClient) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *ApiClient) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *ApiClient) SetRegion(v string) {
	o.Region = &v
}

func (o ApiClient) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiClient) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Expiration) {
		toSerialize["expiration"] = o.Expiration
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	return toSerialize, nil
}

type NullableApiClient struct {
	value *ApiClient
	isSet bool
}

func (v NullableApiClient) Get() *ApiClient {
	return v.value
}

func (v *NullableApiClient) Set(val *ApiClient) {
	v.value = val
	v.isSet = true
}

func (v NullableApiClient) IsSet() bool {
	return v.isSet
}

func (v *NullableApiClient) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiClient(val *ApiClient) *NullableApiClient {
	return &NullableApiClient{value: val, isSet: true}
}

func (v NullableApiClient) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiClient) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
